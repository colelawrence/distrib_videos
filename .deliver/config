# 1. Give a name to your app

APP="distrib_videos"

# 2. Declare the names of your servers and assign the public DNS

EC2_0="ec2-54-149-219-245.us-west-2.compute.amazonaws.com"
EC2_1="ec2-54-187-164-197.us-west-2.compute.amazonaws.com"
EC2_2="ec2-54-244-100-152.us-west-2.compute.amazonaws.com"

# 3. Specify a user 

USER="ubuntu"

# 4. Which host do you want to build the release on?

BUILD_HOST=$EC2_0
BUILD_USER=$USER
BUILD_AT="/tmp/edeliver/$APP/builds"

# 5. Optionally specify the staging host

# STAGING_HOSTS=$EC2_0
# STAGING_USER=$USER
# DELIVER_TO="/home/ubuntu"
 
#6. Specify which host(s) the app is going to be deployed to

PRODUCTION_HOSTS="$EC2_0 $EC2_1 $EC2_2"
PRODUCTION_USER=$USER
DELIVER_TO="/home/ubuntu"

#7. Point to the vm.args file

LINK_VM_ARGS="/home/ubuntu/vm.args"

#8. This is for Phoenix projects

# For *Phoenix* projects, symlink prod.secret.exs to our tmp source
pre_erlang_get_and_update_deps() {
  local _prod_secret_path="/home/$USER/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    __sync_remote "
      ln -sfn '$_prod_secret_path' '$BUILD_AT/config/prod.secret.exs'

      cd '$BUILD_AT'
      
      mkdir -p priv/static
      
      mix deps.get

      # npm install
      
      # brunch build --production
      
      APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
    "
  fi
}